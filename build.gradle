/* 전체 프로젝트 의존성 관리 */
buildscript {
    ext {
        springBootVersion = '2.3.4.RELEASE'
        springfoxVersion =  '2.9.2'
        swaggerVersion = '1.5.21'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath "io.spring.gradle:dependency-management-plugin:0.6.0.RELEASE"
    }
}

subprojects {

    apply plugin: 'java'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'org.springframework.boot'

    group 'kr.seok'
    version '1.0-SNAPSHOT'
    sourceCompatibility = '1.8'

    repositories {
        mavenCentral()
    }

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    dependencies {
        /* SpringFramework */
        implementation('org.springframework.boot:spring-boot-starter-batch')
        implementation("org.springframework.boot:spring-boot-starter-data-jpa")
        implementation "javax.validation:validation-api"

        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'

        /* Excel*/
        implementation("org.apache.poi:poi:4.1.2")          // .xlsx
        implementation("org.apache.poi:poi-ooxml:4.1.2")    // .xls

        runtimeOnly 'com.h2database:h2'
        runtimeOnly('mysql:mysql-connector-java')

        testImplementation('org.springframework.boot:spring-boot-starter-test') {
            /* JUnit 5를 사용하는 경우 Junit4 내용을 제거해줘야 함, (이하 버전 사용하려는 경우 주석처리) */
            exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
        }
        testImplementation 'org.springframework.batch:spring-batch-test'
    }
    /* JUnit5를 사용하는 경우 설정 */
    test {
        useJUnitPlatform()
    }
}

/* Querydsl 프로젝트 리스트 */
def querydslProjects = [
        project(":batch-hospital-position")
]

configure(querydslProjects) {
    apply plugin: "io.spring.dependency-management"

    dependencies {
        compile "com.querydsl:querydsl-jpa"
        compile "com.querydsl:querydsl-core"
        annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jpa" // querydsl JPAAnnotationProcessor 사용 지정
        annotationProcessor "jakarta.persistence:jakarta.persistence-api:2.2.3"
        annotationProcessor "jakarta.annotation:jakarta.annotation-api:1.3.5"
    }

    // querydsl 적용
    def generated='src/main/generated'

    sourceSets {
        main.java.srcDirs += [ generated ]
    }

    tasks.withType(JavaCompile) {
        options.annotationProcessorGeneratedSourcesDirectory = file(generated)
    }

    clean.doLast {
        file(generated).deleteDir()
    }
}

project(":batch-common") {
    /* DTO, Util 클래스 등등 */
    bootJar { enabled = false }
    jar { enabled = true }
}

project(":batch-core") {
    /* 서비스 비즈니스 로직과 관계가 없음, 하나의 인프라 스트럭쳐에 대한 책임만 갖는다. (DB Server, Redis, ElasticSearch 등등) */
    dependencies {
        implementation project(":batch-common")
    }
}

project(":batch-admin") {
    /* API용 비즈니스 로직관련 모듈 swagger */
    dependencies {
        implementation project(":batch-common")
        developmentOnly 'org.springframework.boot:spring-boot-devtools'
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
        implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.1.3'

        implementation "io.springfox:springfox-swagger2:${springfoxVersion}"
        implementation "io.springfox:springfox-swagger-ui:${springfoxVersion}"

        implementation "io.swagger:swagger-annotations:${swaggerVersion}"
        implementation "io.swagger:swagger-models:${swaggerVersion}"
    }
}

project(":batch-hospital-position") {
    dependencies {
        compile project(":batch-common")
    }
}

project(":batch-library") {
    dependencies {
        implementation project(":batch-common")
    }
}

project(":batch-library-jpa") {
    dependencies {
        implementation project(":batch-common")
    }
}
project(":batch-library-test") {
    dependencies {
        implementation project(":batch-common")
    }
}
project(":batch-real-estate") {
    dependencies {
        implementation project(":batch-common")
    }
}
